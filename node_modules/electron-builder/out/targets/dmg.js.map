{"version":3,"file":"dmg.js","sourceRoot":"","sources":["../../src/targets/dmg.ts"],"names":[],"mappings":"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","sourcesContent":["import { Arch, AsyncTaskManager, debug, exec, isCanSignDmg, isEmptyOrSpaces, log, spawn, warn } from \"builder-util\"\nimport { copyFile, exists, statOrNull } from \"builder-util/out/fs\"\nimport { addLicenseToDmg } from \"dmg-builder/out/dmgLicense\"\nimport { applyProperties, attachAndExecute, computeBackground, computeBackgroundColor, detach } from \"dmg-builder/out/dmgUtil\"\nimport { outputFile, remove, unlink } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { deepAssign } from \"read-config-file/out/deepAssign\"\nimport sanitizeFileName from \"sanitize-filename\"\nimport { findIdentity, isSignAllowed } from \"../codeSign\"\nimport { Target } from \"../core\"\nimport MacPackager from \"../macPackager\"\nimport { DmgOptions } from \"../options/macOptions\"\n\nexport class DmgTarget extends Target {\n  readonly options: DmgOptions = this.packager.config.dmg || Object.create(null)\n\n  constructor(private readonly packager: MacPackager, readonly outDir: string) {\n    super(\"dmg\")\n  }\n\n  async build(appPath: string, arch: Arch) {\n    const packager = this.packager\n    log(\"Building DMG\")\n\n    const specification = await this.computeDmgOptions()\n    const volumeName = sanitizeFileName(this.computeVolumeName(specification.title))\n    const artifactName = packager.expandArtifactNamePattern(packager.config.dmg, \"dmg\")\n    const artifactPath = path.join(this.outDir, artifactName)\n\n    const tempDmg = await packager.getTempFile(\".dmg\")\n    const backgroundDir = path.join(await packager.getTempDir(\"dmg\"), \".background\")\n    const backgroundFilename = specification.background == null ? null : path.basename(specification.background)\n    if (backgroundFilename != null) {\n      await copyFile(path.resolve(packager.info.projectDir, specification.background!), path.join(backgroundDir, backgroundFilename))\n    }\n\n    let preallocatedSize = 32 * 1024\n    if (specification.icon != null) {\n      const stat = await statOrNull(specification.icon)\n      if (stat != null) {\n        preallocatedSize += stat.size\n      }\n    }\n\n    // allocate space for .DS_Store\n    await outputFile(path.join(backgroundDir, \"DSStorePlaceHolder\"), new Buffer(preallocatedSize))\n\n    //noinspection SpellCheckingInspection\n    await spawn(\"hdiutil\", addVerboseIfNeed([\"create\",\n      \"-srcfolder\", backgroundDir,\n      \"-srcfolder\", appPath,\n      \"-volname\", volumeName,\n      \"-anyowners\", \"-nospotlight\", \"-fs\", \"HFS+\", \"-fsargs\", \"-c c=64,a=16,e=16\",\n      \"-format\", \"UDRW\",\n    ]).concat(tempDmg))\n\n    const volumePath = path.join(\"/Volumes\", volumeName)\n    if (await exists(volumePath)) {\n      debug(\"Unmounting previous disk image\")\n      await detach(volumePath)\n    }\n\n    const isContinue = await attachAndExecute(tempDmg, true, async () => {\n      const asyncTaskManager = new AsyncTaskManager(packager.info.cancellationToken)\n      asyncTaskManager.addTask(specification.background == null ? remove(`${volumePath}/.background`) : unlink(`${volumePath}/.background/DSStorePlaceHolder`))\n\n      const window = specification.window!\n      const env: any = {\n        ...process.env,\n        volumePath,\n        appFileName: `${packager.appInfo.productFilename}.app`,\n        iconSize: specification.iconSize || 80,\n        iconTextSize: specification.iconTextSize || 12,\n\n        windowX: window.x,\n        windowY: window.y,\n\n        VERSIONER_PERL_PREFER_32_BIT: \"true\"\n      }\n\n      if (specification.icon == null) {\n        delete env.volumeIcon\n      }\n      else {\n        const volumeIcon = `${volumePath}/.VolumeIcon.icns`\n        asyncTaskManager.addTask(copyFile((await packager.getResource(specification.icon))!, volumeIcon))\n        env.volumeIcon = volumeIcon\n      }\n\n      if (specification.backgroundColor != null || specification.background == null) {\n        env.backgroundColor = specification.backgroundColor || \"#ffffff\"\n        env.windowWidth = (window.width || 540).toString()\n        env.windowHeight = (window.height || 380).toString()\n      }\n      else {\n        delete env.backgroundColor\n\n        if (window.width == null) {\n          delete env.windowWidth\n        }\n        else {\n          env.windowWidth = window.width.toString()\n        }\n        if (window.height == null) {\n          delete env.windowHeight\n        }\n        else {\n          env.windowHeight = window.height.toString()\n        }\n\n        env.backgroundFilename = backgroundFilename as any\n      }\n\n      let entries = \"\"\n      for (const c of specification.contents!!) {\n        if (c.path != null && c.path.endsWith(\".app\") && c.type !== \"link\") {\n          warn(`Do not specify path for application: \"${c.path}\". Actual path to app will be used instead.`)\n        }\n\n        let entryPath = c.path || `${packager.appInfo.productFilename}.app`\n        if (entryPath.startsWith(\"/\")) {\n          entryPath = entryPath.substring(1)\n        }\n\n        const entryName = c.name || path.basename(entryPath)\n        entries += `&makeEntries(\"${entryName}\", Iloc_xy => [ ${c.x}, ${c.y} ]),\\n`\n\n        if (c.type === \"link\") {\n          asyncTaskManager.addTask(exec(\"ln\", [\"-s\", `/${entryPath}`, `${volumePath}/${entryName}`]))\n        }\n      }\n      await applyProperties(entries, env, asyncTaskManager, packager)\n      return packager.packagerOptions.effectiveOptionComputed == null || !(await packager.packagerOptions.effectiveOptionComputed({volumePath, specification, packager}))\n    })\n\n    if (!isContinue) {\n      return\n    }\n\n    // dmg file must not exist otherwise hdiutil failed (https://github.com/electron-userland/electron-builder/issues/1308#issuecomment-282847594), so, -ov must be specified\n    //noinspection SpellCheckingInspection\n    const args = [\"convert\", tempDmg, \"-ov\", \"-format\", specification.format!, \"-o\", artifactPath]\n    if (specification.format === \"UDZO\") {\n      args.push(\"-imagekey\", `zlib-level=${process.env.ELECTRON_BUILDER_COMPRESSION_LEVEL || \"9\"}`)\n    }\n    await spawn(\"hdiutil\", addVerboseIfNeed(args))\n    if (this.options.internetEnabled) {\n      await exec(\"hdiutil\", addVerboseIfNeed([\"internet-enable\"]).concat(artifactPath))\n    }\n\n    await addLicenseToDmg(packager, artifactPath)\n\n    await this.signDmg(artifactPath)\n\n    this.packager.dispatchArtifactCreated(artifactPath, this, arch, packager.computeSafeArtifactName(artifactName, \"dmg\"))\n  }\n\n  private async signDmg(artifactPath: string) {\n    if (!isSignAllowed(false)) {\n      return\n    }\n\n    if (!(await isCanSignDmg())) {\n      warn(\"At least macOS 10.11.5 is required to sign DMG, please update OS.\")\n    }\n\n    const packager = this.packager\n    const qualifier = packager.platformSpecificBuildOptions.identity\n    // explicitly disabled if set to null\n    if (qualifier === null) {\n      // macPackager already somehow handle this situation, so, here just return\n      return\n    }\n\n    const keychainName = (await packager.codeSigningInfo).keychainName\n    const certificateType = \"Developer ID Application\"\n    let identity = await findIdentity(certificateType, qualifier, keychainName)\n    if (identity == null) {\n      identity = await findIdentity(\"Mac Developer\", qualifier, keychainName)\n      if (identity == null) {\n        return\n      }\n    }\n\n    const args = [\"--sign\", identity.hash]\n    if (keychainName != null) {\n      args.push(\"--keychain\", keychainName)\n    }\n    args.push(artifactPath)\n    await exec(\"codesign\", args)\n  }\n\n  computeVolumeName(custom?: string | null): string {\n    const appInfo = this.packager.appInfo\n    if (custom == null) {\n      return `${appInfo.productFilename} ${appInfo.version}`\n    }\n\n    return custom\n      .replace(/\\${version}/g, appInfo.version)\n      .replace(/\\${name}/g, appInfo.name)\n      .replace(/\\${productName}/g, appInfo.productName)\n  }\n\n  // public to test\n  async computeDmgOptions(): Promise<DmgOptions> {\n    // appdmg\n    const appdmgWindow = (this.options.window as any) || {}\n    const oldPosition = appdmgWindow.position\n    const oldSize = appdmgWindow.size\n    const oldIconSize = (this.options as any)[\"icon-size\"]\n    const oldBackgroundColor = (this.options as any)[\"background-color\"]\n    if (oldPosition != null) {\n      warn(\"dmg.window.position is deprecated, please use dmg.window instead\")\n    }\n    if (oldSize != null) {\n      warn(\"dmg.window.size is deprecated, please use dmg.window instead\")\n    }\n    if (oldIconSize != null) {\n      warn(\"dmg.icon-size is deprecated, please use dmg.iconSize instead\")\n    }\n    if (oldBackgroundColor != null) {\n      warn(\"dmg.background-color is deprecated, please use dmg.backgroundColor instead\")\n    }\n\n    const packager = this.packager\n    const specification = deepAssign<DmgOptions>({\n        window: {\n          x: 400,\n          y: 100,\n        },\n        iconSize: oldIconSize,\n        backgroundColor: oldBackgroundColor,\n        icon: \"icon\" in this.options ? undefined : await packager.getIconPath()\n      },\n      this.options,\n      oldPosition == null ? null : {\n        window: {\n          x: oldPosition.x,\n          y: oldPosition.y,\n        }\n      },\n      oldSize == null ? null : {\n        window: {\n          width: oldSize.width,\n          height: oldSize.height,\n        }\n      })\n\n    if (specification.icon != null && isEmptyOrSpaces(specification.icon)) {\n      throw new Error(\"dmg.icon cannot be specified as empty string\")\n    }\n\n    if (specification.backgroundColor != null) {\n      if (specification.background != null) {\n        throw new Error(\"Both dmg.backgroundColor and dmg.background are specified — please set the only one\")\n      }\n      specification.backgroundColor = computeBackgroundColor(specification.backgroundColor)\n    }\n    else if (!(\"background\" in specification)) {\n      specification.background = await computeBackground(packager)\n    }\n\n    if (specification.format == null) {\n      if (process.env.ELECTRON_BUILDER_COMPRESSION_LEVEL != null) {\n        (specification as any).format = \"UDZO\"\n      }\n      else if (packager.config.compression === \"store\") {\n        (specification as any).format = \"UDRO\"\n      }\n      else {\n        (specification as any).format = packager.config.compression === \"maximum\" ? \"UDBZ\" : \"UDZO\"\n      }\n    }\n\n    if (specification.contents == null) {\n      specification.contents = [\n        {\n          x: 130, y: 220\n        },\n        {\n          x: 410, y: 220, type: \"link\", path: \"/Applications\"\n        }\n      ]\n    }\n    return specification\n  }\n}\n\nfunction addVerboseIfNeed(args: Array<string>): Array<string> {\n  if (process.env.DEBUG_DMG === \"true\") {\n    args.push(\"-verbose\")\n  }\n  return args\n}"]}
